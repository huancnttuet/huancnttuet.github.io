{"version":3,"sources":["views/About/giphy.gif","components/Cell/Cell.js","components/Map/Map.js","services/procon/procon.js","services/solution/solution.js","components/Action/Action.js","components/InfoMatch/InfoMatch.js","views/Home/Home.js","views/About/About.js","views/SetToken/SetToken.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cell","props","point","tiled","myAgents","yourAgents","x","y","myTeamID","callback","useState","visible","setVisible","checkIsAgent","isMe","i","length","agentID","style","display","height","width","placement","title","type","borderColor","borderWidth","onClick","onOk","e","onCancel","span","rotate","backgroundColor","Map","points","teams","teamID","filter","agents","map","element","index","axios","defaults","baseURL","headers","common","localStorage","getItem","get","a","data","console","log","update","matchID","post","action","setToken","token","setItem","solver","infoMap","turnLimit","hasOwnProperty","areaPoint","turn","Option","Select","Title","Typography","Action","updateMap","actions","change","solution","setSolution","setAction","loading","setLoading","useEffect","openNotification","succces","notification","open","message","description","icon","color","extraJSX","level","undefined","spinning","extra","defaultValue","marginRight","onChange","value","solutionServer","then","res","catch","err","currentAction","currentTurn","dx","dy","proconServer","status","marginLeft","addonBefore","addonAfter","InfoMatch","time","isUpdate","timeLeft","setTimeLeft","warning","intervalId","setInterval","clearInterval","history","push","tilePoint","t","Date","m","getMinutes","getHours","getSeconds","getDate","getMonth","getFullYear","convertTime","startedAtUnixTime","Home","match","parseInt","params","id","teamid","timeLimit","setInfoMap","setChange","timeUpdate","setTimeUpdate","setCurrentTurn","setIsUpdate","openNotificationWithIcon","myTeam","marginTop","temp","j","el","checkMoveStay","act","Header","Layout","Content","Footer","About","className","theme","mode","lineHeight","Item","key","href","padding","margin","background","minHeight","src","gif","alt","textAlign","SetToken","infoMatch","setInfoMatch","getFisrt","matchTo","intervalMillis","turnMillis","turns","placeholder","event","target","window","location","reload","browserHistory","createBrowserHistory","Boolean","hostname","ReactDOM","render","exact","path","name","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,mC,4LCyL5BC,MAtLf,SAAcC,GAAQ,IAElBC,EAQED,EARFC,MACAC,EAOEF,EAPFE,MACAC,EAMEH,EANFG,SACAC,EAKEJ,EALFI,WACAC,EAIEL,EAJFK,EACAC,EAGEN,EAHFM,EACAC,EAEEP,EAFFO,SACAC,EACER,EADFQ,SATiB,EAYWC,oBAAS,GAZpB,mBAYZC,EAZY,KAYHC,EAZG,KAcbC,EAAe,SAAAC,GACnB,GAAIA,GACF,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAASY,SAAUD,EACrC,GAAIX,EAASW,GAAGT,IAAMA,EAAI,GAAKF,EAASW,GAAGR,IAAMA,EAAI,EACnD,OAAOH,EAASW,GAAGE,aAGvB,IAAK,IAAIF,EAAI,EAAGA,EAAIX,EAASY,SAAUD,EACrC,GAAIV,EAAWU,GAAGT,IAAMA,EAAI,GAAKD,EAAWU,GAAGR,IAAMA,EAAI,EACvD,OAAOF,EAAWU,GAAGE,QAG3B,OAAO,GAGT,OACE,yBAAKC,MAAO,CAAEC,QAAS,WACV,IAAVhB,EACC,kBAAC,IAAD,CAAQe,MAAO,CAAEE,OAAQ,OAAQC,MAAO,SAAWnB,GACjDC,IAAUK,EACZK,EAAa,GACX,kBAAC,IAAD,CAASS,UAAU,MAAMC,MAAK,gBAAWV,EAAa,KACpD,kBAAC,IAAD,CACEW,KAAK,UACLN,MAAO,CACLE,OAAQ,OACRC,MAAO,OACPI,YAAa,MACbC,YAAa,SAEfC,QAAS,WACPf,GAAW,KAGZV,GAEH,kBAAC,IAAD,CACEqB,MAAK,gBAAWV,EAAa,IAC7BF,QAASA,EACTiB,KAAM,SAAAC,GAAC,OAAIjB,GAAW,IACtBkB,SAAU,SAAAD,GAAC,OAAIjB,GAAW,IAC1BS,MAAO,KAEP,yBAAKH,MAAO,CAAEG,MAAO,UACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKU,KAAM,GACT,kBAAC,IAAD,CACEJ,QAAS,WACPlB,EAAS,EAAGI,EAAa,IACzBD,GAAW,KAGb,kBAAC,IAAD,CAAMY,KAAK,aAAaQ,OAAQ,OAGpC,kBAAC,IAAD,CAAKD,KAAM,GACT,kBAAC,IAAD,CACEJ,QAAS,WACPlB,EAAS,EAAGI,EAAa,IACzBD,GAAW,KAGb,kBAAC,IAAD,CAAMY,KAAK,eAGf,kBAAC,IAAD,CAAKO,KAAM,GACT,kBAAC,IAAD,CACEJ,QAAS,WACPlB,EAAS,EAAGI,EAAa,IACzBD,GAAW,KAGb,kBAAC,IAAD,CAAMY,KAAK,WAAWQ,OAAQ,QAIpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,KAAM,GACT,kBAAC,IAAD,CACEJ,QAAS,WACPlB,EAAS,EAAGI,EAAa,IACzBD,GAAW,KAGb,kBAAC,IAAD,CAAMY,KAAK,iBAGf,kBAAC,IAAD,CAAKO,KAAM,GAAX,KACA,kBAAC,IAAD,CAAKA,KAAM,GACT,kBAAC,IAAD,CACEJ,QAAS,WACPlB,EAAS,EAAGI,EAAa,IACzBD,GAAW,KAGb,kBAAC,IAAD,CAAMY,KAAK,mBAIjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKO,KAAM,GACT,kBAAC,IAAD,CACEJ,QAAS,WACPlB,EAAS,EAAGI,EAAa,IACzBD,GAAW,KAGb,kBAAC,IAAD,CAAMY,KAAK,aAAaQ,OAAQ,OAGpC,kBAAC,IAAD,CAAKD,KAAM,GACT,kBAAC,IAAD,CACEJ,QAAS,WACPlB,EAAS,EAAGI,EAAa,IACzBD,GAAW,KAGb,kBAAC,IAAD,CAAMY,KAAK,iBAGf,kBAAC,IAAD,CAAKO,KAAM,GACT,kBAAC,IAAD,CACEJ,QAAS,WACPlB,EAAS,EAAGI,EAAa,IACzBD,GAAW,KAGb,kBAAC,IAAD,CAAMY,KAAK,cAAcQ,OAAQ,WAQ7C,kBAAC,IAAD,CAAQR,KAAK,UAAUN,MAAO,CAAEE,OAAQ,OAAQC,MAAO,SACpDnB,GAGHW,EAAa,GACf,kBAAC,IAAD,CAASS,UAAU,MAAMC,MAAK,gBAAWV,EAAa,KACpD,kBAAC,IAAD,CACEK,MAAO,CACLE,OAAQ,OACRC,MAAO,OACPI,YAAa,QACbQ,gBAAiB,SAGlB/B,IAIL,kBAAC,IAAD,CACEgB,MAAO,CACLE,OAAQ,OACRC,MAAO,OACPY,gBAAiB,OACjBP,YAAa,UAGdxB,KCrJIgC,EA3BH,SAAAjC,GAAU,IACZkC,EAA2ClC,EAA3CkC,OAAQhC,EAAmCF,EAAnCE,MAAOiC,EAA4BnC,EAA5BmC,MAAOC,EAAqBpC,EAArBoC,OAAQ5B,EAAaR,EAAbQ,SAChCL,EAAWgC,EAAME,QAAO,SAAAT,GAAC,OAAIA,EAAEQ,SAAWA,KAAQ,GAAGE,OACrDlC,EAAa+B,EAAME,QAAO,SAAAT,GAAC,OAAIA,EAAEQ,SAAWA,KAAQ,GAAGE,OAE7D,OACE,6BACGJ,EAAOK,KAAI,SAACC,EAASC,GAAV,OACV,6BACGD,EAAQD,KAAI,SAACX,EAAGd,GAAJ,OACX,kBAAC,EAAD,CACEb,MAAO2B,EACP1B,MAAOA,EAAMuC,GAAO3B,GACpBX,SAAUA,EACVC,WAAYA,EACZC,EAAGS,EACHR,EAAGmC,EACHlC,SAAU6B,EACV5B,SAAUA,a,gGCnBxBkC,IAAMC,SAASC,QAAU,wCACzBF,IAAMC,SAASE,QAAQC,OAAO,gBAAkB,mBAChDJ,IAAMC,SAASE,QAAQC,OAAvB,cAAiDC,aAAaC,QAAQ,SAEtE,IAgBe,GAAEC,IAhBR,uCAAG,4BAAAC,EAAA,sEACSR,IAAMO,IAAI,YADnB,cACJE,EADI,OAEVC,QAAQC,IAAIF,GAFF,kBAGHA,GAHG,2CAAH,qDAgBaG,OAXV,uCAAG,WAAMC,GAAN,eAAAL,EAAA,sEACMR,IAAMO,IAAI,YAAcM,GAD9B,cACPJ,EADO,yBAENA,GAFM,2CAAH,sDAWkBK,KAPpB,uCAAG,WAAOD,EAASE,GAAhB,eAAAP,EAAA,sEACQR,IAAMc,KAAK,YAAcD,EAAU,UAAWE,GADtD,cACLN,EADK,yBAEJA,GAFI,2CAAH,wDAO0BO,SAHnB,SAAAC,GACfZ,aAAaa,QAAQ,QAASD,KClB1Bf,EAAU,gCAChBF,IAAMC,SAASE,QAAQC,OAAO,gBAAkB,mBAEhD,IAyBe,GAAEe,OAzBL,uCAAG,WAAOpB,EAAOqB,EAASP,EAASQ,GAAhC,mBAAAb,EAAA,sDAEb,IADMf,EAAQ2B,EAAQ3B,MACbrB,EAAI,EAAGA,EAAIqB,EAAMpB,OAAQD,IAClBqB,EAAMrB,GACPkD,eAAe,eAC1BF,EAAQ3B,MAAMrB,GAAGmD,UAAY,GAG3Bd,EAAO,CACXW,QAASA,EACTP,QAASA,EACTW,KAAMH,GAXK,KAaLtB,EAbK,OAcN,IAdM,OAgBN,IAhBM,OAkBN,IAlBM,wCAeIC,IAAMc,KAAKZ,EAAU,WAAYO,GAfrC,gEAiBIT,IAAMc,KAAKZ,EAAU,WAAYO,GAjBrC,kEAmBIT,IAAMc,KAAKZ,EAAU,WAAYO,GAnBrC,qFAAH,6DCWJgB,EAAWC,IAAXD,OACAE,EAAUC,IAAVD,MA8JOE,MA5Jf,SAAgBvE,GAAQ,IAEpBoC,EAQEpC,EARFoC,OACAmB,EAOEvD,EAPFuD,QACAO,EAME9D,EANF8D,QACAU,EAKExE,EALFwE,UACAC,EAIEzE,EAJFyE,QACAC,EAGE1E,EAHF0E,OACAlE,EAEER,EAFFQ,SACAuD,EACE/D,EADF+D,UATmB,EAYWtD,mBAAS,GAZpB,mBAYdkE,EAZc,KAYJC,EAZI,OAaOnE,mBAAS,IAbhB,mBAadgD,EAbc,KAaNoB,EAbM,OAcSpE,oBAAS,GAdlB,mBAcdqE,EAdc,KAcLC,EAdK,KAerBC,qBAAU,WACRH,EAAUJ,KACT,CAACA,EAASC,IAEb,IAAMO,EAAmB,SAAAC,GACnBA,EACFC,IAAaC,KAAK,CAChBC,QAAS,UACTC,YAAa,mCACbC,KAAM,kBAAC,IAAD,CAAMhE,KAAK,QAAQN,MAAO,CAAEuE,MAAO,eAG3CL,IAAaC,KAAK,CAChBC,QAAS,QACTC,YAAa,4BACbC,KAAM,kBAAC,IAAD,CAAMhE,KAAK,QAAQQ,OAAQ,IAAKd,MAAO,CAAEuE,MAAO,gBAiBtDC,EACJ,kBAACpB,EAAD,CAAOqB,MAAO,GAAd,QAAuB5B,EAAUA,EAAQI,UAAOyB,GAGlD,OACE,6BACE,kBAAC,IAAD,CAAMC,SAAUd,GACd,kBAAC,IAAD,CACExD,MAAOmE,EACPI,MACE,6BACE,kBAAC,IAAD,CACEC,aAAc,EACd7E,MAAO,CAAEG,MAAO,IAAK2E,YAAa,OAClCC,SAAU,SAAAC,GACRrB,EAAYqB,KAGd,kBAAC9B,EAAD,CAAQ8B,MAAO,GAAf,aACA,kBAAC9B,EAAD,CAAQ8B,MAAO,GAAf,aACA,kBAAC9B,EAAD,CAAQ8B,MAAO,GAAf,cAEF,kBAAC,IAAD,CACE1E,KAAK,SACLN,MAAO,CAAE8E,YAAa,OACtBrE,QAAS,WACPqD,GAAW,GACXmB,EACGrC,OAAOc,EAAUb,EAASP,EAASQ,GACnCoC,MAAK,SAAAC,GAAQ,IACJjD,EAASiD,EAATjD,KACRC,QAAQC,IAAI,UAAWF,GACvB4B,GAAW,GACXF,EAAU1B,EAAKM,OAAOgB,SACtBjE,EAAS2C,EAAKM,OAAOgB,YAEtB4B,OAAM,SAAAC,GACLlD,QAAQC,IAAIiD,GACZrB,GAAiB,GACjBF,GAAW,QAjBnB,SAuBA,kBAAC,IAAD,CACExD,KAAK,UACLG,QAAS,WACP,IAAM6E,EAAgB9C,EAChB+C,EAAc1C,EAAQI,KAC5BqC,EAAchE,KAAI,SAAAX,GAAC,MAAK,CACtBZ,QAASY,EAAEZ,QACXyF,GAAI7E,EAAE6E,GACNC,GAAI9E,EAAE8E,GACNnF,KAAMK,EAAEL,KACR2C,KAAMsC,MAERpD,QAAQC,IAAI,kBAAmBkD,GAC/BI,EACGnD,KAAKD,EAAS,CAAEkB,QAAS8B,IACzBJ,MAAK,SAAAC,GACe,MAAfA,EAAIQ,OACN3B,GAAiB,GAGjBA,GAAiB,MAGpBoB,OAAM,SAAAC,GACLlD,QAAQC,IAAIiD,GACZrB,GAAiB,QAzBzB,QA+BA,kBAAC,IAAD,CACE1D,KAAK,UACLN,MAAO,CAAE4F,WAAY,OACrBnF,QAAS,WACP8C,EAAUjB,EAASnB,KAJvB,WAYJ,kBAAC,IAAD,KACGqB,EAAOlB,KAAI,SAACX,EAAGd,GAAJ,OACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,MAAO,CAAEG,MAAO,SAChB0F,YAAW,gBAAWlF,EAAEZ,SACxB+F,WACE,uCACMnF,EAAEL,MADR,KA3GAlB,EA4G0BuB,EAAE6E,GA5GzBnG,EA4G6BsB,EAAE8E,GA3GxC,IAANrG,IAAkB,IAAPC,EAAiB,kBAAC,IAAD,CAAMiB,KAAK,aACjC,IAANlB,IAAkB,IAAPC,EAAiB,kBAAC,IAAD,CAAMiB,KAAK,WAAWQ,OAAQ,KACpD,IAAN1B,GAAiB,IAANC,EAAgB,kBAAC,IAAD,CAAMiB,KAAK,gBAChC,IAANlB,GAAiB,IAANC,EAAgB,kBAAC,IAAD,CAAMiB,KAAK,cAAcQ,OAAQ,KACtD,IAAN1B,GAAiB,IAANC,EAAgB,kBAAC,IAAD,CAAMiB,KAAK,gBAC/B,IAAPlB,GAAkB,IAANC,EAAgB,kBAAC,IAAD,CAAMiB,KAAK,aAAaQ,OAAQ,MACrD,IAAP1B,GAAkB,IAANC,EAAgB,kBAAC,IAAD,CAAMiB,KAAK,gBAChC,IAAPlB,IAAmB,IAAPC,EAAiB,kBAAC,IAAD,CAAMiB,KAAK,aAAaQ,OAAQ,KACvD,IAAN1B,GAAiB,IAANC,EAAgB,kBAAC,IAAD,CAAMiB,KAAK,YAA1C,GAmGuD,QA5GxC,IAAClB,EAAGC,U,SClDf+D,EAAUC,IAAVD,MAoFO2C,EAlFG,SAAAhH,GAAU,IAClB8D,EAA4B9D,EAA5B8D,QAASmD,EAAmBjH,EAAnBiH,KAAMC,EAAalH,EAAbkH,SADE,EAGOzG,mBAASwG,GAHhB,mBAGlBE,EAHkB,KAGRC,EAHQ,KAQzBpC,qBAAU,WACJkC,IACFE,EAAYH,GALd5B,IAAQgC,QAAQ,oBAQf,CAACH,EAAUD,IAEdjC,qBAAU,WAEHmC,GAAUC,EAAYH,GAI3B,IAAMK,EAAaC,aAAY,WAC7BH,EAAYD,EAAW,KACtB,KAGH,OAAO,WACLK,cAAcF,MAIf,CAACH,EAAUF,IACd,IAYMxB,EAAW,kBAAC,EAAD,CAAOC,MAAO,GAAd,UAAyByB,GAE1C,OACE,6BACE,kBAAC,IAAD,CACE7F,MAAOmE,EACPI,MACE,yBAAK5E,MAAO,CAAEC,QAAS,WACrB,kBAAC,IAAD,CACEK,KAAK,UACLG,QAAS,WACP1B,EAAMyH,QAAQC,KAAK,OAHvB,UAWJ,yBAAKzG,MAAO,CAAEC,QAAS,SACpB4C,EACGA,EAAQ3B,MAAMI,KAAI,SAACX,EAAGd,GAAJ,OAChB,kBAAC,IAAD,CAAMG,MAAO,CAAEG,MAAO,SAAWE,MAAK,mBAAcM,EAAEQ,SACpD,2CAAiBR,EAAEqC,WACnB,2CAAiBrC,EAAE+F,WACnB,sCAAY/F,EAAEqC,UAAYrC,EAAE+F,oBAGhChC,EACJ,kBAAC,IAAD,CAAMrE,MAAM,gCAAcL,MAAO,CAAEG,MAAO,UACvC0C,EA1CS,SAAAmD,GAClB,IAAIW,EAAI,IAAIC,KAAKZ,GACba,EAAIF,EAAEG,aAOV,OANQH,EAAEI,WAMC,IAAMF,EAAI,IALbF,EAAEK,aAKqB,IAJrBL,EAAEM,UAI+B,IAH/BN,EAAEO,WAG2C,IAF9CP,EAAEQ,cAmCMC,CAAYvE,EAAQwE,mBAAqB,OC+JjDC,MAvOf,SAAcvI,GAAQ,IACZwI,EAAUxI,EAAVwI,MACFjF,EAAUkF,SAASD,EAAME,OAAOC,IAChCvG,EAASqG,SAASD,EAAME,OAAOE,QAC/BC,EAAYJ,SAASD,EAAME,OAAOzB,MAClClD,EAAY0E,SAASD,EAAME,OAAOxE,MALrB,EAMWzD,qBANX,mBAMZqD,EANY,KAMHgF,EANG,OAOSrI,mBAAS,IAPlB,mBAOZgD,EAPY,KAOJoB,EAPI,OAQSpE,oBAAS,GARlB,mBAQZiE,EARY,KAQJqE,EARI,OASWtI,oBAAS,GATpB,mBASZqE,EATY,KASHC,EATG,OAWiBtE,mBADjB,GAVA,mBAWZuI,EAXY,KAWAC,EAXA,OAYmBxI,mBAAS,GAZ5B,mBAYZ+F,EAZY,KAYC0C,EAZD,OAaazI,oBAAS,GAbtB,mBAaZyG,EAbY,KAaFiC,EAbE,KAcbC,EAA2B,WAC/BjE,IAAY,MAAU,CACpBE,QAAS,QACTC,YAAa,iDA2KjB,OAnJAN,qBAAU,WAqBHgE,IACHC,EArDe,GAgCC,SAAC1F,EAASnB,GAC1BuE,EACGrD,OAAOC,GACP4C,MAAK,SAAAC,GAAQ,IACJjD,EAASiD,EAATjD,KACR4B,GAAW,GACX3B,QAAQC,IAAI,iBAAkBF,GAC9B2F,EAAW3F,GACPqD,IAAgBrD,EAAKe,KAAMiF,GAAY,GACtCA,GAAY,GACjBD,EAAe/F,EAAKe,MACpB,IAAMmF,EAASlG,EAAKhB,MAAME,QAAO,SAAAT,GAAC,OAAIA,EAAEQ,SAAWA,KACnDgB,QAAQC,IAAIgG,MAEbhD,OAAM,SAAAC,GACL8C,IACArE,GAAW,MAMfP,CAAUjB,EAASnB,IAKrB,IAAMkF,EAAaC,aAAY,WAC7B0B,EAAcD,EAAa,KAC1B,KAGH,OAAO,WACLxB,cAAcF,MAIf,CAAC0B,EAAYzF,EAASnB,EAAQoE,IAEjCxB,qBAAU,WACRD,GAAW,IACO,SAACxB,EAASnB,GAC1B2C,GAAW,GACX4B,EACGrD,OAAOC,GACP4C,MAAK,SAAAC,GAAQ,IACJjD,EAASiD,EAATjD,KACR4B,GAAW,GACX3B,QAAQC,IAAI,iBAAkBF,GAC9B2F,EAAW3F,GACX,IAAMkG,EAASlG,EAAKhB,MAAME,QAAO,SAAAT,GAAC,OAAIA,EAAEQ,SAAWA,KACnDgB,QAAQC,IAAIgG,GACZxE,EACEwE,EAAO,GAAG/G,OAAOC,KAAI,SAAAX,GACnB,MAAO,CACLZ,QAASY,EAAEZ,QACXyF,GAAI,EACJC,GAAI,EACJnF,KAAM,OACN2C,KAAMf,EAAKe,aAKlBmC,OAAM,SAAAC,GACL8C,IACArE,GAAW,MAGjBP,CAAUjB,EAASnB,KAClB,CAACmB,EAASnB,IA6EX,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMwD,SAAUd,GACd,kBAAC,IAAD,CAAKhD,KAAM,GAAIb,MAAO,CAAEqI,UAAW,OAAQzC,WAAY,SACpD/C,EACC,kBAAC,EAAD,CACE1B,OAAQA,EACRF,OAAQ4B,EAAQ5B,OAChBhC,MAAO4D,EAAQ5D,MACfM,SA1DG,SAACyF,EAAOjF,GACvBoC,QAAQC,IAAII,GAEZ,IADA,IAAI8F,EAAO9F,EACFhB,EAAQ,EAAGA,EAAQgB,EAAO1C,OAAQ0B,IACzC,GAAI8G,EAAK9G,GAAOzB,UAAYA,EAE1B,OADAuI,EAAK9G,GAAOlB,KAAO,OACX0E,GACN,KAAK,EACHsD,EAAK9G,GAAOgE,GAAK,EACjB8C,EAAK9G,GAAOiE,GAAK,EACjB,MACF,KAAK,EACH6C,EAAK9G,GAAOgE,GAAK,EACjB8C,EAAK9G,GAAOiE,GAAK,EACjB,MACF,KAAK,EACH6C,EAAK9G,GAAOgE,GAAK,EACjB8C,EAAK9G,GAAOiE,GAAK,EACjB,MACF,KAAK,EACH6C,EAAK9G,GAAOgE,IAAM,EAClB8C,EAAK9G,GAAOiE,GAAK,EACjB,MACF,KAAK,EACH6C,EAAK9G,GAAOgE,IAAM,EAClB8C,EAAK9G,GAAOiE,GAAK,EACjB,MACF,KAAK,EACH6C,EAAK9G,GAAOgE,IAAM,EAClB8C,EAAK9G,GAAOiE,IAAM,EAClB,MACF,KAAK,EACH6C,EAAK9G,GAAOgE,GAAK,EACjB8C,EAAK9G,GAAOiE,IAAM,EAClB,MACF,KAAK,EACH6C,EAAK9G,GAAOgE,GAAK,EACjB8C,EAAK9G,GAAOiE,IAAM,EAM1B6C,EAjEoB,SAAChD,EAAezC,EAAS1B,GAG7C,IAFA,IAAMjC,EAAW2D,EAAQ3B,MAAME,QAAO,SAAAT,GAAC,OAAIA,EAAEQ,SAAWA,KAAQ,GAAGE,OAC7DpC,EAAQ4D,EAAQ5D,MACbY,EAAI,EAAGA,EAAIyF,EAAcxF,OAAQD,IAAK,CAC7C,IAAIc,EAAI2E,EAAczF,GACtB,GAAe,SAAXc,EAAEL,KACJ,IAAK,IAAIiI,EAAI,EAAGA,EAAIrJ,EAASY,OAAQyI,IAAK,CACxC,IAAIC,EAAKtJ,EAASqJ,GACdC,EAAGzI,UAAYY,EAAEZ,SAE2B,IAA5Cd,EAAMuJ,EAAGnJ,EAAIsB,EAAE8E,GAAK,GAAG+C,EAAGpJ,EAAIuB,EAAE6E,GAAK,IACrCvG,EAAMuJ,EAAGnJ,EAAIsB,EAAE8E,GAAK,GAAG+C,EAAGpJ,EAAIuB,EAAE6E,GAAK,KAAOrE,IAE5CmE,EAAczF,GAAGS,KAAO,WAMlC,OAAOgF,EA8CAmD,CAAcH,EAAMzF,EAAS1B,GACpCyC,EAAU0E,GACVR,GAAWrE,IAcCvC,MAAO2B,EAAQ3B,aAGjBwD,GAIJ,kBAAC,IAAD,CAAK7D,KAAM,GACT,kBAAC,EAAD,CACEgC,QAASA,EACT2D,QAASzH,EAAMyH,QACfR,KAAM4B,EACN3B,SAAUA,IAEZ,kBAAC,EAAD,CACEpD,QAASA,EACTU,UAlMM,SAACjB,EAASnB,GAC1BuE,EACGrD,OAAOC,GACP4C,MAAK,SAAAC,GAAQ,IACJjD,EAASiD,EAATjD,KACR4B,GAAW,GACX3B,QAAQC,IAAI,iBAAkBF,GAC9B2F,EAAW3F,GACPqD,IAAgBrD,EAAKe,KAAMiF,GAAY,GACtCA,GAAY,GACjBD,EAAe/F,EAAKe,MACpB,IAAMmF,EAASlG,EAAKhB,MAAME,QAAO,SAAAT,GAAC,OAAIA,EAAEQ,SAAWA,KACnDgB,QAAQC,IAAIgG,MAEbhD,OAAM,SAAAC,GACL8C,IACArE,GAAW,OAmLL3C,OAAQA,EACRmB,QAASA,EACTkB,QAAShB,EACTiB,OAAQA,EACR+C,QAASzH,EAAMyH,QACfjH,SA3GW,SAAAmJ,GACrB9E,EAAU8E,IA2GA5F,UAAWA,S,6CCjOjB6F,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OA0CVC,EAxCD,SAAAhK,GACZ,OACE,kBAAC8J,EAAD,CAASG,UAAU,UACjB,kBAACL,EAAD,KACE,yBAAKK,UAAU,SACf,kBAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAalJ,MAAO,CAAEmJ,WAAY,SACxD,kBAAC,IAAKC,KAAN,CACEC,IAAI,IACJ5I,QAAS,WACP1B,EAAMyH,QAAQC,KAAK,OAHvB,QAQA,kBAAC,IAAK2C,KAAN,CAAWC,IAAI,KACb,uBAAGC,KAAK,kCAAR,eAIN,kBAACT,EAAD,CAAS7I,MAAO,CAAEuJ,QAAS,WACzB,kBAAC,IAAD,CAAYvJ,MAAO,CAAEwJ,OAAQ,WAC3B,kBAAC,IAAWJ,KAAZ,aAEF,yBAAKpJ,MAAO,CAAEyJ,WAAY,OAAQF,QAAS,GAAIG,UAAW,MACxD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK7I,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACT,yBAAK8I,IAAKC,IAAKC,IAAI,uCAErB,kBAAC,IAAD,CAAKhJ,KAAM,OAIjB,kBAACiI,EAAD,CAAQ9I,MAAO,CAAE8J,UAAW,WAA5B,wCCsCSC,EAzEE,SAAAhL,GAAU,IAAD,EACUS,qBADV,mBACjBwK,EADiB,KACNC,EADM,OAEEzK,mBAAS,IAFX,mBAEjBkD,EAFiB,KAEVD,EAFU,KAGlByH,EAAW,WACfxE,EAAa1D,MAAMkD,MAAK,SAAAC,GAAQ,IACtBjD,EAASiD,EAATjD,KACR+H,EAAa/H,OAQjB,OAJA6B,qBAAU,WACRmG,MACC,IAGD,6BACGF,EACCA,EAAU1I,KAAI,SAACX,EAAGd,GAAJ,OACZ,kBAAC,IAAD,CAAKgB,KAAM,GACT,kBAAC,IAAD,CAAMR,MAAOM,EAAEwJ,SACb,iCAAOxJ,EAAE+G,IACT,6CAAmB/G,EAAEyJ,gBACrB,qCAAWzJ,EAAEQ,QACb,yCAAeR,EAAE0J,YACjB,oCAAU1J,EAAE2J,OACZ,kBAAC,IAAD,CACE7J,QAAS,WAGP1B,EAAMyH,QAAQC,KAAd,eACU9F,EAAE+G,GADZ,YACkB/G,EAAEQ,OADpB,YAC8BR,EAAE0J,WAAa,IAD7C,YACqD1J,EAAE2J,UAL3D,WAeN,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKzJ,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACT,mDAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,KAAM,IACX,kBAAC,IAAD,CAAKA,KAAM,GACT,kBAAC,IAAD,CACE0J,YAAY,QACZxF,SAAU,SAAAyF,GACR/H,EAAS+H,EAAMC,OAAOzF,UAG1B,kBAAC,IAAD,CACEvE,QAAO,sBAAE,sBAAAwB,EAAA,6DACPyD,EAAajD,SAASC,GADf,SAEDwH,IAFC,OAGPQ,OAAOC,SAASC,SAHT,4CADX,W,QCrDRC,EAAiBC,cCKHC,QACW,cAA7BL,OAAOC,SAASK,UAEe,UAA7BN,OAAOC,SAASK,UAEhBN,OAAOC,SAASK,SAASzD,MACvB,2DCXN0D,IAASC,OAAO,mBFED,WACb,OACE,kBAAC,IAAD,CAAQ1E,QAASqE,GACf,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,KAAK,WAAWC,UAAWvB,IACjD,kBAAC,IAAD,CACEoB,OAAK,EACLC,KAAK,+BACLC,KAAK,MACLC,UAAWhE,IAEb,kBAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,SAASC,KAAK,QAAQC,UAAWvC,SEd7C,MAASwC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzG,MAAK,SAAA0G,GACjCA,EAAaC,kB","file":"static/js/main.0552a342.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/giphy.8cc15aae.gif\";","import React, { useState } from \"react\";\r\nimport { Button, Tooltip, Modal, Col, Row, Icon } from \"antd\";\r\n\r\nfunction Cell(props) {\r\n  const {\r\n    point,\r\n    tiled,\r\n    myAgents,\r\n    yourAgents,\r\n    x,\r\n    y,\r\n    myTeamID,\r\n    callback\r\n  } = props;\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const checkIsAgent = isMe => {\r\n    if (isMe) {\r\n      for (let i = 0; i < myAgents.length; ++i) {\r\n        if (myAgents[i].x === x + 1 && myAgents[i].y === y + 1)\r\n          return myAgents[i].agentID;\r\n      }\r\n    } else {\r\n      for (let i = 0; i < myAgents.length; ++i) {\r\n        if (yourAgents[i].x === x + 1 && yourAgents[i].y === y + 1)\r\n          return yourAgents[i].agentID;\r\n      }\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"inline\" }}>\r\n      {tiled === 0 ? (\r\n        <Button style={{ height: \"42px\", width: \"42px\" }}>{point}</Button>\r\n      ) : tiled === myTeamID ? (\r\n        checkIsAgent(1) ? (\r\n          <Tooltip placement=\"top\" title={`Agent ${checkIsAgent(1)}`}>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{\r\n                height: \"42px\",\r\n                width: \"42px\",\r\n                borderColor: \"red\",\r\n                borderWidth: \"2.5px\"\r\n              }}\r\n              onClick={() => {\r\n                setVisible(true);\r\n              }}\r\n            >\r\n              {point}\r\n            </Button>\r\n            <Modal\r\n              title={`Agent ${checkIsAgent(1)}`}\r\n              visible={visible}\r\n              onOk={e => setVisible(false)}\r\n              onCancel={e => setVisible(false)}\r\n              width={200}\r\n            >\r\n              <div style={{ width: \"150px\" }}>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        callback(1, checkIsAgent(1));\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      <Icon type=\"arrow-left\" rotate={45} />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        callback(2, checkIsAgent(1));\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      <Icon type=\"arrow-up\" />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        callback(3, checkIsAgent(1));\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      <Icon type=\"arrow-up\" rotate={45} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        callback(4, checkIsAgent(1));\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      <Icon type=\"arrow-left\" />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col span={8}> </Col>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        callback(6, checkIsAgent(1));\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      <Icon type=\"arrow-right\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        callback(7, checkIsAgent(1));\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      <Icon type=\"arrow-down\" rotate={45} />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        callback(8, checkIsAgent(1));\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      <Icon type=\"arrow-down\" />\r\n                    </Button>\r\n                  </Col>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      onClick={() => {\r\n                        callback(9, checkIsAgent(1));\r\n                        setVisible(false);\r\n                      }}\r\n                    >\r\n                      <Icon type=\"arrow-right\" rotate={45} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Modal>\r\n          </Tooltip>\r\n        ) : (\r\n          <Button type=\"primary\" style={{ height: \"42px\", width: \"42px\" }}>\r\n            {point}\r\n          </Button>\r\n        )\r\n      ) : checkIsAgent(0) ? (\r\n        <Tooltip placement=\"top\" title={`Agent ${checkIsAgent(0)}`}>\r\n          <Button\r\n            style={{\r\n              height: \"42px\",\r\n              width: \"42px\",\r\n              borderColor: \"black\",\r\n              backgroundColor: \"gray\"\r\n            }}\r\n          >\r\n            {point}\r\n          </Button>\r\n        </Tooltip>\r\n      ) : (\r\n        <Button\r\n          style={{\r\n            height: \"42px\",\r\n            width: \"42px\",\r\n            backgroundColor: \"gray\",\r\n            borderWidth: \"2.5px\"\r\n          }}\r\n        >\r\n          {point}\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport Cell from \"../Cell\";\r\nconst Map = props => {\r\n  const { points, tiled, teams, teamID, callback } = props;\r\n  const myAgents = teams.filter(e => e.teamID === teamID)[0].agents;\r\n  const yourAgents = teams.filter(e => e.teamID !== teamID)[0].agents;\r\n\r\n  return (\r\n    <div>\r\n      {points.map((element, index) => (\r\n        <div>\r\n          {element.map((e, i) => (\r\n            <Cell\r\n              point={e}\r\n              tiled={tiled[index][i]}\r\n              myAgents={myAgents}\r\n              yourAgents={yourAgents}\r\n              x={i}\r\n              y={index}\r\n              myTeamID={teamID}\r\n              callback={callback}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import axios from \"axios\";\r\naxios.defaults.baseURL = \"http://sv-procon.uet.vnu.edu.vn:8010/\";\r\naxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\naxios.defaults.headers.common[\"Authorization\"] = localStorage.getItem(\"token\");\r\n\r\nconst get = async () => {\r\n  const data = await axios.get(\"/matches\");\r\n  console.log(data);\r\n  return data;\r\n};\r\nconst update = async matchID => {\r\n  const data = await axios.get(\"/matches/\" + matchID);\r\n  return data;\r\n};\r\nconst post = async (matchID, action) => {\r\n  const data = await axios.post(\"/matches/\" + matchID + \"/action\", action);\r\n  return data;\r\n};\r\nconst setToken = token => {\r\n  localStorage.setItem(\"token\", token);\r\n};\r\nexport default { get, update, post, setToken };\r\n","import axios from \"axios\";\r\nconst baseURL = \"http://localhost:8080/solvers\";\r\naxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\r\n\r\nconst solver = async (index, infoMap, matchID, turnLimit) => {\r\n  const teams = infoMap.teams;\r\n  for (let i = 0; i < teams.length; i++) {\r\n    let element = teams[i];\r\n    if (!element.hasOwnProperty(\"areaPoint\")) {\r\n      infoMap.teams[i].areaPoint = 0;\r\n    }\r\n  }\r\n  const data = {\r\n    infoMap: infoMap,\r\n    matchID: matchID,\r\n    turn: turnLimit\r\n  };\r\n  switch (index) {\r\n    case 1:\r\n      return await axios.post(baseURL + \"/solver1\", data);\r\n    case 2:\r\n      return await axios.post(baseURL + \"/solver2\", data);\r\n    case 3:\r\n      return await axios.post(baseURL + \"/solver3\", data);\r\n    default:\r\n    // code block\r\n  }\r\n};\r\n\r\nexport default { solver };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Select,\r\n  Button,\r\n  Input,\r\n  Spin,\r\n  Row,\r\n  Col,\r\n  Icon,\r\n  notification,\r\n  Typography\r\n} from \"antd\";\r\nimport { proconServer } from \"../../services/procon\";\r\nimport { solutionServer } from \"../../services/solution\";\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\n\r\nfunction Action(props) {\r\n  const {\r\n    teamID,\r\n    matchID,\r\n    infoMap,\r\n    updateMap,\r\n    actions,\r\n    change,\r\n    callback,\r\n    turnLimit\r\n  } = props;\r\n\r\n  const [solution, setSolution] = useState(1);\r\n  const [action, setAction] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    setAction(actions);\r\n  }, [actions, change]);\r\n\r\n  const openNotification = succces => {\r\n    if (succces)\r\n      notification.open({\r\n        message: \"Succces\",\r\n        description: \"Gửi action thành công\",\r\n        icon: <Icon type=\"smile\" style={{ color: \"#108ee9\" }} />\r\n      });\r\n    else {\r\n      notification.open({\r\n        message: \"Error\",\r\n        description: \"Bị lỗi rồi\",\r\n        icon: <Icon type=\"smile\" rotate={180} style={{ color: \"#108ee9\" }} />\r\n      });\r\n    }\r\n  };\r\n\r\n  const moveIcon = (x, y) => {\r\n    if (x === 0 && y === -1) return <Icon type=\"arrow-up\" />;\r\n    if (x === 1 && y === -1) return <Icon type=\"arrow-up\" rotate={45} />;\r\n    if (x === 1 && y === 0) return <Icon type=\"arrow-right\" />;\r\n    if (x === 1 && y === 1) return <Icon type=\"arrow-right\" rotate={45} />;\r\n    if (x === 0 && y === 1) return <Icon type=\"arrow-down\" />;\r\n    if (x === -1 && y === 1) return <Icon type=\"arrow-down\" rotate={45} />;\r\n    if (x === -1 && y === 0) return <Icon type=\"arrow-left\" />;\r\n    if (x === -1 && y === -1) return <Icon type=\"arrow-left\" rotate={45} />;\r\n    if (x === 0 && y === 0) return <Icon type=\"qq\" />;\r\n  };\r\n\r\n  const extraJSX = (\r\n    <Title level={1}>Turn {infoMap ? infoMap.turn : undefined}</Title>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Spin spinning={loading}>\r\n        <Card\r\n          title={extraJSX}\r\n          extra={\r\n            <div>\r\n              <Select\r\n                defaultValue={1}\r\n                style={{ width: 100, marginRight: \"5px\" }}\r\n                onChange={value => {\r\n                  setSolution(value);\r\n                }}\r\n              >\r\n                <Option value={1}>Solution1</Option>\r\n                <Option value={2}>Solution2</Option>\r\n                <Option value={3}>Solution3</Option>\r\n              </Select>\r\n              <Button\r\n                type=\"danger\"\r\n                style={{ marginRight: \"5px\" }}\r\n                onClick={() => {\r\n                  setLoading(true);\r\n                  solutionServer\r\n                    .solver(solution, infoMap, matchID, turnLimit)\r\n                    .then(res => {\r\n                      const { data } = res;\r\n                      console.log(\"Solved:\", data);\r\n                      setLoading(false);\r\n                      setAction(data.action.actions);\r\n                      callback(data.action.actions);\r\n                    })\r\n                    .catch(err => {\r\n                      console.log(err);\r\n                      openNotification(false);\r\n                      setLoading(false);\r\n                    });\r\n                }}\r\n              >\r\n                Solve\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  const currentAction = action;\r\n                  const currentTurn = infoMap.turn;\r\n                  currentAction.map(e => ({\r\n                    agentID: e.agentID,\r\n                    dx: e.dx,\r\n                    dy: e.dy,\r\n                    type: e.type,\r\n                    turn: currentTurn\r\n                  }));\r\n                  console.log(\"action request:\", currentAction);\r\n                  proconServer\r\n                    .post(matchID, { actions: currentAction })\r\n                    .then(res => {\r\n                      if (res.status === 200) {\r\n                        openNotification(true);\r\n                        // updateMap(matchID, teamID);\r\n                      } else {\r\n                        openNotification(false);\r\n                      }\r\n                    })\r\n                    .catch(err => {\r\n                      console.log(err);\r\n                      openNotification(false);\r\n                    });\r\n                }}\r\n              >\r\n                Send\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                style={{ marginLeft: \"5px\" }}\r\n                onClick={() => {\r\n                  updateMap(matchID, teamID);\r\n                }}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          }\r\n        >\r\n          <Row>\r\n            {action.map((e, i) => (\r\n              <Col>\r\n                <Input\r\n                  style={{ width: \"150px\" }}\r\n                  addonBefore={`Agent ${e.agentID}`}\r\n                  addonAfter={\r\n                    <div>\r\n                      {`${e.type}`} {moveIcon(e.dx, e.dy)}{\" \"}\r\n                    </div>\r\n                  }\r\n                />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Card>\r\n      </Spin>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Action;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, message, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst InfoMatch = props => {\r\n  const { infoMap, time, isUpdate } = props;\r\n  // initialize timeLeft with the seconds prop\r\n  const [timeLeft, setTimeLeft] = useState(time);\r\n  const openNotificationNewTurn = () => {\r\n    message.warning(\"Turn mới\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isUpdate) {\r\n      setTimeLeft(time);\r\n      openNotificationNewTurn();\r\n    }\r\n  }, [isUpdate, time]);\r\n\r\n  useEffect(() => {\r\n    // exit early when we reach 0\r\n    if (!timeLeft) setTimeLeft(time);\r\n\r\n    // save intervalId to clear the interval when the\r\n    // component re-renders\r\n    const intervalId = setInterval(() => {\r\n      setTimeLeft(timeLeft - 1);\r\n    }, 1000);\r\n\r\n    // clear interval on re-render to avoid memory leaks\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n    // add timeLeft as a dependency to re-rerun the effect\r\n    // when we update it\r\n  }, [timeLeft, time]);\r\n  const convertTime = time => {\r\n    var t = new Date(time);\r\n    var m = t.getMinutes();\r\n    var h = t.getHours();\r\n    var s = t.getSeconds();\r\n    var day = t.getDate();\r\n    var month = t.getMonth();\r\n    var year = t.getFullYear();\r\n\r\n    return h + \":\" + m + \":\" + s + \" \" + day + \"/\" + month + \"/\" + year;\r\n  };\r\n\r\n  const extraJSX = <Title level={3}>Time : {timeLeft}</Title>;\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        title={extraJSX}\r\n        extra={\r\n          <div style={{ display: \"inline\" }}>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                props.history.push(\"/\");\r\n              }}\r\n            >\r\n              Home\r\n            </Button>\r\n          </div>\r\n        }\r\n      >\r\n        <div style={{ display: \"flex\" }}>\r\n          {infoMap\r\n            ? infoMap.teams.map((e, i) => (\r\n                <Card style={{ width: \"150px\" }} title={`TeamID : ${e.teamID}`}>\r\n                  <p>Area Point : {e.areaPoint}</p>\r\n                  <p>Tile Point : {e.tilePoint}</p>\r\n                  <p>Total : {e.areaPoint + e.tilePoint}</p>\r\n                </Card>\r\n              ))\r\n            : undefined}\r\n          <Card title=\"Bắt đầu lúc\" style={{ width: \"150px\" }}>\r\n            {infoMap ? convertTime(infoMap.startedAtUnixTime) : 0}\r\n          </Card>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoMatch;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Map from \"../../components/Map\";\r\nimport Action from \"../../components/Action\";\r\nimport { proconServer } from \"../../services/procon\";\r\nimport { Col, Row, Spin, notification } from \"antd\";\r\nimport InfoMatch from \"../../components/InfoMatch/InfoMatch\";\r\n\r\nfunction Home(props) {\r\n  const { match } = props;\r\n  const matchID = parseInt(match.params.id);\r\n  const teamID = parseInt(match.params.teamid);\r\n  const timeLimit = parseInt(match.params.time);\r\n  const turnLimit = parseInt(match.params.turn);\r\n  const [infoMap, setInfoMap] = useState();\r\n  const [action, setAction] = useState([]);\r\n  const [change, setChange] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const TIMEUPDATE = 1;\r\n  const [timeUpdate, setTimeUpdate] = useState(TIMEUPDATE);\r\n  const [currentTurn, setCurrentTurn] = useState(0);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"error\"]({\r\n      message: \"ERROR\",\r\n      description: \"Có lỗi gì đó rồi :(\"\r\n    });\r\n  };\r\n\r\n  const updateMap = (matchID, teamID) => {\r\n    proconServer\r\n      .update(matchID)\r\n      .then(res => {\r\n        const { data } = res;\r\n        setLoading(false);\r\n        console.log(\"current data :\", data);\r\n        setInfoMap(data);\r\n        if (currentTurn !== data.turn) setIsUpdate(true);\r\n        else setIsUpdate(false);\r\n        setCurrentTurn(data.turn);\r\n        const myTeam = data.teams.filter(e => e.teamID === teamID);\r\n        console.log(myTeam);\r\n      })\r\n      .catch(err => {\r\n        openNotificationWithIcon();\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updateMap = (matchID, teamID) => {\r\n      proconServer\r\n        .update(matchID)\r\n        .then(res => {\r\n          const { data } = res;\r\n          setLoading(false);\r\n          console.log(\"current data :\", data);\r\n          setInfoMap(data);\r\n          if (currentTurn !== data.turn) setIsUpdate(true);\r\n          else setIsUpdate(false);\r\n          setCurrentTurn(data.turn);\r\n          const myTeam = data.teams.filter(e => e.teamID === teamID);\r\n          console.log(myTeam);\r\n        })\r\n        .catch(err => {\r\n          openNotificationWithIcon();\r\n          setLoading(false);\r\n        });\r\n    };\r\n    // exit early when we reach 0\r\n    if (!timeUpdate) {\r\n      setTimeUpdate(TIMEUPDATE);\r\n      updateMap(matchID, teamID);\r\n    }\r\n\r\n    // save intervalId to clear the interval when the\r\n    // component re-renders\r\n    const intervalId = setInterval(() => {\r\n      setTimeUpdate(timeUpdate - 1);\r\n    }, 1000);\r\n\r\n    // clear interval on re-render to avoid memory leaks\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n    // add timeLeft as a dependency to re-rerun the effect\r\n    // when we update it\r\n  }, [timeUpdate, matchID, teamID, currentTurn]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const updateMap = (matchID, teamID) => {\r\n      setLoading(true);\r\n      proconServer\r\n        .update(matchID)\r\n        .then(res => {\r\n          const { data } = res;\r\n          setLoading(false);\r\n          console.log(\"current data :\", data);\r\n          setInfoMap(data);\r\n          const myTeam = data.teams.filter(e => e.teamID === teamID);\r\n          console.log(myTeam);\r\n          setAction(\r\n            myTeam[0].agents.map(e => {\r\n              return {\r\n                agentID: e.agentID,\r\n                dx: 0,\r\n                dy: 0,\r\n                type: \"stay\",\r\n                turn: data.turn\r\n              };\r\n            })\r\n          );\r\n        })\r\n        .catch(err => {\r\n          openNotificationWithIcon();\r\n          setLoading(false);\r\n        });\r\n    };\r\n    updateMap(matchID, teamID);\r\n  }, [matchID, teamID]);\r\n\r\n  const callbackAction = act => {\r\n    setAction(act);\r\n  };\r\n\r\n  const checkMoveStay = (currentAction, infoMap, teamID) => {\r\n    const myAgents = infoMap.teams.filter(e => e.teamID === teamID)[0].agents;\r\n    const tiled = infoMap.tiled;\r\n    for (let i = 0; i < currentAction.length; i++) {\r\n      let e = currentAction[i];\r\n      if (e.type === \"move\") {\r\n        for (let j = 0; j < myAgents.length; j++) {\r\n          let el = myAgents[j];\r\n          if (el.agentID === e.agentID) {\r\n            if (\r\n              tiled[el.y + e.dy - 1][el.x + e.dx - 1] !== 0 &&\r\n              tiled[el.y + e.dy - 1][el.x + e.dx - 1] !== teamID\r\n            ) {\r\n              currentAction[i].type = \"remove\";\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return currentAction;\r\n  };\r\n\r\n  const callback = (value, agentID) => {\r\n    console.log(action);\r\n    let temp = action;\r\n    for (let index = 0; index < action.length; index++)\r\n      if (temp[index].agentID === agentID) {\r\n        temp[index].type = \"move\";\r\n        switch (value) {\r\n          case 6:\r\n            temp[index].dx = 1;\r\n            temp[index].dy = 0;\r\n            break;\r\n          case 9:\r\n            temp[index].dx = 1;\r\n            temp[index].dy = 1;\r\n            break;\r\n          case 8:\r\n            temp[index].dx = 0;\r\n            temp[index].dy = 1;\r\n            break;\r\n          case 7:\r\n            temp[index].dx = -1;\r\n            temp[index].dy = 1;\r\n            break;\r\n          case 4:\r\n            temp[index].dx = -1;\r\n            temp[index].dy = 0;\r\n            break;\r\n          case 1:\r\n            temp[index].dx = -1;\r\n            temp[index].dy = -1;\r\n            break;\r\n          case 2:\r\n            temp[index].dx = 0;\r\n            temp[index].dy = -1;\r\n            break;\r\n          case 3:\r\n            temp[index].dx = 1;\r\n            temp[index].dy = -1;\r\n            break;\r\n          default:\r\n          // code block\r\n        }\r\n      }\r\n    temp = checkMoveStay(temp, infoMap, teamID);\r\n    setAction(temp);\r\n    setChange(!change);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Spin spinning={loading}>\r\n          <Col span={15} style={{ marginTop: \"20px\", marginLeft: \"20px\" }}>\r\n            {infoMap ? (\r\n              <Map\r\n                teamID={teamID}\r\n                points={infoMap.points}\r\n                tiled={infoMap.tiled}\r\n                callback={callback}\r\n                teams={infoMap.teams}\r\n              />\r\n            ) : (\r\n              undefined\r\n            )}\r\n          </Col>\r\n\r\n          <Col span={8}>\r\n            <InfoMatch\r\n              infoMap={infoMap}\r\n              history={props.history}\r\n              time={timeLimit}\r\n              isUpdate={isUpdate}\r\n            />\r\n            <Action\r\n              infoMap={infoMap}\r\n              updateMap={updateMap}\r\n              teamID={teamID}\r\n              matchID={matchID}\r\n              actions={action}\r\n              change={change}\r\n              history={props.history}\r\n              callback={callbackAction}\r\n              turnLimit={turnLimit}\r\n            />\r\n          </Col>\r\n        </Spin>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport gif from \"./giphy.gif\";\r\nimport { Layout, Menu, Breadcrumb, Col, Row } from \"antd\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst About = props => {\r\n  return (\r\n    <Content className=\"layout\">\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"horizontal\" style={{ lineHeight: \"64px\" }}>\r\n          <Menu.Item\r\n            key=\"1\"\r\n            onClick={() => {\r\n              props.history.push(\"/\");\r\n            }}\r\n          >\r\n            Home\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <a href=\"https://github.com/huancnttuet\">About me</a>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n          <Breadcrumb.Item>...</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\r\n          <Row>\r\n            <Col span={8}></Col>\r\n            <Col span={8}>\r\n              <img src={gif} alt=\"ảnh chứ cái gì :D\" />\r\n            </Col>\r\n            <Col span={8}></Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: \"center\" }}>\r\n        Procon UI ©2019 Created by Huan\r\n      </Footer>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input, Button, Card, Col, Row } from \"antd\";\r\nimport { proconServer } from \"../../services/procon\";\r\n\r\nconst SetToken = props => {\r\n  const [infoMatch, setInfoMatch] = useState();\r\n  const [token, setToken] = useState(\"\");\r\n  const getFisrt = () => {\r\n    proconServer.get().then(res => {\r\n      const { data } = res;\r\n      setInfoMatch(data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFisrt();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {infoMatch ? (\r\n        infoMatch.map((e, i) => (\r\n          <Col span={8}>\r\n            <Card title={e.matchTo}>\r\n              <p>id:{e.id}</p>\r\n              <p>intervalMillis:{e.intervalMillis}</p>\r\n              <p>teamID:{e.teamID}</p>\r\n              <p>turnMillis:{e.turnMillis}</p>\r\n              <p>turns:{e.turns}</p>\r\n              <Button\r\n                onClick={() => {\r\n                  //   setMatchID(e.id);\r\n                  //   handleClick(e.id, e.teamID, e.turnMillis);\r\n                  props.history.push(\r\n                    `/map/${e.id}/${e.teamID}/${e.turnMillis / 1000}/${e.turns}`\r\n                  );\r\n                }}\r\n              >\r\n                GO\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        ))\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col span={4}></Col>\r\n            <Col span={8}>\r\n              <h1> Nhập Token </h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={4}></Col>\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder=\"Token\"\r\n                onChange={event => {\r\n                  setToken(event.target.value);\r\n                }}\r\n              />\r\n              <Button\r\n                onClick={async () => {\r\n                  proconServer.setToken(token);\r\n                  await getFisrt();\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                OK\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetToken;\r\n","import React from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./views/Home\";\r\nimport About from \"./views/About\";\r\nimport SetToken from \"./views/SetToken\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router history={browserHistory}>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\" name=\"setToken\" component={SetToken} />\r\n          <Route\r\n            exact\r\n            path=\"/map/:id/:teamid/:time/:turn\"\r\n            name=\"Map\"\r\n            component={Home}\r\n          />\r\n          <Route exact path=\"/about\" name=\"About\" component={About} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}